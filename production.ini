[alembic]
script_location = migrations
sqlalchemy.url = postgresql+psycopg2://postgres:root@localhost/niimanga?client_encoding=utf8

[app:main]
use = egg:niimanga
pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en
pyramid.includes =
    pyramid_storage
    pyramid_tm
    pyramid_mako
    pyramid_celery

# sqlalchemy.url = sqlite:///%(here)s/protype.db
sqlalchemy.url = postgresql+psycopg2://postgres:root@localhost/niimanga?client_encoding=utf8
static_assets = static
# untuk storage folder
static_manga = store/manga
static_anime = store/anime
static_common = store/common
storage.base_path = /rak/manga
storage.base_url = store/manga/
storage.extensions = images+archives

auth.secret = rahasia

[server:main]
use = egg:gunicorn#main
host = 127.0.0.1
port = 8080
# setting for gunicorn
logconfig = %(here)s/production.ini
proc_name = niimanga_g
pidfile = niimanga_g.pid
workers = 3

###
# Celery Configuration
###

[celery]
BROKER_URL = redis://localhost:6379/7

[celerybeat:task1]
task = niimanga.tasks.build_latest
type = crontab
schedule = {"day_of_month": "thu, fri"}

[loggers]
keys = root, niimanga, sqlalchemy, gunicorn

[handlers]
keys = console, filelog, dblog, gunicorn

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console

[logger_niimanga]
level = WARN
handlers = filelog
qualname = niimanga

[logger_sqlalchemy]
level = WARN
handlers = dblog
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[logger_gunicorn]
level = DEBUG
handlers = gunicorn
qualname = gunicorn

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_filelog]
class = FileHandler
args = ('%(here)s/log/sys.log','a')
level = WARN
formatter = generic

[handler_dblog]
class = FileHandler
args = ('%(here)s/log/dblog.log', 'a')
level = WARN
formatter = generic

[handler_gunicorn]
class = FileHandler
args = ('%(here)s/log/gunicorn.log', 'a')
level = WARN
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

