[alembic]
script_location = migrations
sqlalchemy.url = postgresql+psycopg2://postgres:root@localhost/niimanga?client_encoding=utf8

[app:main]
use = egg:niimanga
pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en
pyramid.includes =
    pyramid_storage
    pyramid_debugtoolbar
    pyramid_tm
    pyramid_celery
    pyramid_mako


# sqlalchemy.url = sqlite:///%(here)s/protype.db
sqlalchemy.url = postgresql+psycopg2://postgres:root@localhost/niimanga?client_encoding=utf8
static_assets = static
# untuk storage folder
static_manga = store/manga
static_anime = store/anime
static_common = store/common
storage.base_path = /rak/manga
storage.base_url = store/manga/
storage.extensions = images+archives

auth.secret = rahasia

[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 5000

###
# Celery Configuration
###

[celery]
BROKER_URL = redis://localhost:6379/7
CELERY_IMPORTS = niimanga.tasks

[celerybeat:task1]
task = niimanga.tasks.build_latest
type = crontab
schedule = {"minute": 0, "hour": "*/5"}

[loggers]
keys = root, niimanga, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_niimanga]
level = DEBUG
handlers =
qualname = niimanga

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

